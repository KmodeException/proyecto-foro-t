openapi: 3.0.0
info:
  title: Documentación de la API
  description: API para gestionar subapartados, posts y autenticación de usuarios.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Servidor de desarrollo
paths:
  api/auth/register:
    post:
      summary: Registrar un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: Usuario registrado exitosamente
        '400':
          description: Solicitud inválida

  api/auth/login:
    post:
      summary: Iniciar sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Inicio de sesión exitoso
        '401':
          description: Credenciales inválidas

  api/auth/profile:
    get:
      summary: Obtener información del perfil del usuario autenticado
      security:
        - bearerAuth: []  # Indica que este endpoint requiere autenticación
      responses:
        '200':
          description: Información del perfil
        '401':
          description: No autorizado

  /subsections:
    get:
      summary: Obtener todos los subapartados
      responses:
        '200':
          description: Lista de subapartados
        '404':
          description: No se encontraron subapartados

    post:
      summary: Crear un nuevo subapartado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                category:
                  type: string
                description:
                  type: string
                rules:
                  type: array
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                      description:
                        type: string
      responses:
        '201':
          description: Subapartado creado exitosamente
        '400':
          description: Solicitud inválida

  /posts:
    post:
      summary: Crear un nuevo post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                subSection:
                  type: string
      responses:
        '201':
          description: Post creado exitosamente
        '400':
          description: Solicitud inválida

    get:
      summary: Obtener posts por subapartado
      parameters:
        - in: path
          name: subSectionId
          required: true
          description: ID del subapartado
          schema:
            type: string
      responses:
        '200':
          description: Lista de posts
        '404':
          description: No se encontraron posts

  /auth/check-role:
    get:
      tags:
        - Authentication
      summary: Verificar rol de usuario
      security:
        - BearerAuth: []
      responses:
        200:
          description: Rol verificado
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    type: string
                  translatorProfile:
                    $ref: '#/components/schemas/User/properties/translatorProfile'

  /games:
    get:
      tags:
        - Games
      summary: Obtener lista de juegos
      responses:
        200:
          description: Lista de juegos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
    
    post:
      tags:
        - Games
      summary: Crear nuevo juego
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                platform:
                  type: array
                  items:
                    type: string
      responses:
        201:
          description: Juego creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'

  /games/{id}/status:
    patch:
      tags:
        - Games
      summary: Actualizar estado de traducción
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [pending, in_progress, completed]
                translationProgress:
                  type: number

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        username:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [user, translator, moderator, admin]
        translatorProfile:
          type: object
          properties:
            level:
              type: number
            projects:
              type: array
              items:
                type: string
            reputation:
              type: number
        stats:
          type: object
          properties:
            postsCount:
              type: number
            commentsCount:
              type: number
            translationsCount:
              type: number

    Game:
      type: object
      required:
        - title
        - platform
      properties:
        _id:
          type: string
        title:
          type: string
        platform:
          type: array
          items:
            type: string
            enum: [PC, PS4, PS5, Xbox One, Xbox Series, Switch, Mobile]
        status:
          type: string
          enum: [pending, in_progress, completed]
        translationProgress:
          type: number
        translationLead:
          $ref: '#/components/schemas/User'
        translators:
          type: array
          items:
            type: object
            properties:
              user:
                $ref: '#/components/schemas/User'
              assignedDate:
                type: string
                format: date-time

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
